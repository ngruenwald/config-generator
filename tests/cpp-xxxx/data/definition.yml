info:
  version: 1.0
  title: config
  description: This is a fancy configuration

options:
  cpp:
    use_optional: True
    use_printer: True
    # use_validate: True
    post_process:
      use: True
      args:
        - type: "const std::string&"
          name: "foo"

elements:
  types:
    $ref: '#/types/many-types'
    required: True

  an_integer:
    type: integer
    required: True

  an_unsigned:
    type: unsigned
    reqired: True

  a_string:
    type: string
    required: True

  a_float:
    type: float
    required: True

  a_double:
    type: double
    required: True

  a_bool:
    type: bool
    required: True

  an_array:
    type: array
    items:
      type: int
    required: True

  a_dictionary:
    type: dictionary
    keys:
      type: string
    values:
      type: string
    required: True

  an_enum:
    $ref: '#/types/little-enum'
    required: True

  test42:
    $ref: '#/types/test42'
    required: True

types:
  many-types:
    type: object
    properties:
      # mandatory
      am:
        type: int
      bm:
        type: integer
      cm:
        type: number
      dm:
        type: uint
      em:
        type: unsigned
      fm:
        type: string
      gm:
        type: float
      hm:
        type: double
      im:
        type: bool
      jm:
        type: boolean
      km:
        $ref: '#/types/integer-array'
      lm:
        $ref: '#/types/string-list'
      mm:
        $ref: '#/types/simple-object'
      nm:
        $ref: '#/types/string-string-dict'
      om:
        $ref: '#/types/simple-object-array'
      pm:
        $ref: '#/types/int-simple-object-dict'
      # optional
      ao:
        type: int
      bo:
        type: integer
      co:
        type: number
      do:
        type: uint
      eo:
        type: unsigned
      fo:
        type: string
      go:
        type: float
      ho:
        type: double
      io:
        type: bool
      jo:
        type: boolean
      ko:
        $ref: '#/types/integer-array'
      lo:
        $ref: '#/types/string-list'
      mo:
        $ref: '#/types/simple-object'
      noo:
        $ref: '#/types/string-string-dict'
    required:
      - am
      - bm
      - cm
      - dm
      - em
      - fm
      - gm
      - hm
      - im
      - jm
      - km
      - lm
      - mm
      - nm
      - om
      - pm

  simple-object:
    type: object
    properties:
      am:
        type: int
    required:
      - am

  little-enum:
    type: string
    enum: [foo, bar]

  integer-array:
    type: array
    items:
      type: integer
    itemName: item

  string-list:
    type: list
    items:
      type: string

  string-string-dict:
    type: dict  # dict / dictionary / map
    keys:
      type: string
    values:
      type: string

  simple-object-array:
    type: array
    items:
      $ref: '#/types/simple-object'

  int-simple-object-dict:
    type: dict
    keys:
      type: int
    values:
      $ref: '#/types/simple-object'

  # bar-type:
  #   type: object
  #   properties:
  #     gup:
  #       type: string
  #     bop:
  #       type: int
  #     hop:
  #       $ref: '#/types/float-array'
  #   required:
  #     - bop

  # float-array:
  #   type: array
  #   items:
  #     type: float

  oid:
    description: Object Identifier
    type: uint
    base: 16
    min: 0x0000
    max: 0xffff

  test42:
    description: Test 42
    type: object
    properties:
      base-oid:
        description: The base object identifier
        $ref: '#/types/oid'
    required:
      - base-oid
